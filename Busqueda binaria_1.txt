#include <iostream>
using namespace std;
int binarySearch(int array[], int x, int low, int high){
    while (low <= high){
        int mid = low +(high -low) / 2;
        
        if(x == array[mid])
            return mid;
            
        if(x > array[mid])
            low = mid + 1;
        else
            high = mid - 1;
        
        }
    return -1;
    
}
 
 int main(void) {
     int array[] = {3, 4, 5, 6, 7, 8, 9};
     int x = 4;
     int result;
     int n = sizeof(array) / sizeof(array[0]);
     if (result == -1)
        printf("not foud");
        printf("Elements is found at index %d", result);
 }   





#include <stdio.h>
#include <stdlib.h>

// Búsqueda binaria
int binarySearch(int array[], int x, int low, int high){
    while (low <= high){
        int mid = low + (high - low) / 2;

        if (x == array[mid])
            return mid;

        if (x > array[mid])
            low = mid + 1;
        else
            high = mid - 1;
    }
    return -1;
}



//Búsqueda binaria de manera manual
int main(void) {
    int n, x, result;

    printf("Ingrese el tamaño del arreglo: ");
    scanf("%d", &n);

    int* array = (int*)malloc(n * sizeof(int));

    printf("Ingrese los %d elementos del arreglo (ordenados):\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &array[i]);
    }

    printf("Ingrese el elemento a buscar: ");
    scanf("%d", &x);

    result = binarySearch(array, x, 0, n - 1);

    if (result == -1)
        printf("No encontrado\n");
    else
        printf("Elemento encontrado en el índice %d\n", result);

    free(array);
    return 0;
}
